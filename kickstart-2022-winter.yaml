- workshop_title: Getting started with scientific computing/HPC (winter 2022)
- workshop_description: >
    This is part of the Aalto Scientific Computing "Getting started
    with Scientific Computing" and "HPC Kickstart"
    workshop.  The videos are available to everyone, but may be most
    useful to the people who attended the workshop and want to review
    later.


    Playlist: https://www.youtube.com/playlist?list=PLZLVmS9rf3nOKhGHMw4ZY57rO7tQIxk5V


    Workshop webpage day 1: https://scicomp.aalto.fi/training/scip/getting-started-with-scientific-computing/

    Workshop webpage day 2-3: https://scicomp.aalto.fi/training/scip/winter-kickstart/


    Aalto Scientific Computing: https://scicomp.aalto.fi/

    CodeRefinery: https://coderefinery.org/


- input: day1-obs.mkv
- output: day1-icebreaker.mkv
  title: 1.0 Icebreaker
  description: >-
    This is the starting discussion before the workshop gets started.
    Most people would probably want to skip this and move on to the
    next video.

  editlist:
  - start: 7:42
  - end: 17:45


- output: day1-me-and-hpc.mkv
  title: "1.1 Me and HPC or: How I learned to stop worrying and love the computing"
  description: >-
    Are you at the start of your scientific computing journey?

    Would you like to hear tips and tricks from someone who knows what
    they are doing, but still remembers what it was like to be a
    newbie?

    In this talk a we will get a personal views of high-performance
    computing from a final year PhD student and one of our staff
    scientists.

  editlist:
  - start: 17:45
  - end: 41:33


- output: day1-scicomp-workflows.mkv
  title: 1.2 Scientific Computing workflows at Aalto
  description: >-

    The types of services available at Aalto and many other
    universities, a summary of what you might actually use in the next
    six months.

    https://hackmd.io/@AaltoSciComp/SciCompIntro

    https://scicomp.aalto.fi/triton/usage/workflows/

  editlist:
  - start: 41:33
  - -: Intro
  - 43:20: What is computing? How does it go?
  - 46:20: How does computing happen?  hardware, software, data
  - 55:55: Your computer isn't enough, what next?
  - 1:01:05: List of services for scientific computing
  - end: 1:07:11


- output: day1-asking-for-help.mkv
  title: 1.3 When and how to ask for help
  description: >-

    It's dangerous to go alone, take us! Don't waste time struggling,
    there are plenty of people here for you.  We discuss why you
    should ask for help quickly, and how to do it to get the best
    response.  We discuss what it's like to be on both sides of the
    support system.

    https://cicero.xyz/v3/remark/0.14.0/github.com/bast/help-with-supercomputers/main/talk.md/

  editlist:
  - start: 1:17:18
  - -: Intro
  - 1:19:10: Outline and goals
  - 1:21:58: Where to ask
  - 1:23:38: Who is on the other side?
  - 1:28:24: Subject, context, and formulating questions.
  - 1:33:00: When to ask for help
  - 1:35:14: XY problem, needing X but asking for Y
  - 1:40:10: You are not alone
  - 1:41:10: "Q&A: XY problems, chat, ..."
  - end: 1:43:22


- output: day1-tour-of-skills-and-tools.mkv
  title: 1.4 A tour of scientific computing skills and tools
  description: >-

    There are so many tools available for computing. We'll describe
    some of most important things and give you links to your next
    steps.

    https://hackmd.io/@AaltoSciComp/ToolsOfScientificComputing

  editlist:
  - start: 1:43:22
  - -: Intro
  - 1:45:30: Workflows and needs
  - 1:50:25: What you need to take with you
  - 1:55:40: Scientific programming languages
  - 1:54:35: Editors and IDEs
  - 1:55:40: Scripts vs notebooks
  - 1:57:35: Starting a new project
  - 1:59:17: Version control
  - 2:03:58: Commenting and documenting
  - 2:04:20: Keeping track of requirements
  - 2:05:58: Using existing packages and frameworks
  - 2:07:07: Working together with other people
  - end: 2:09:57


- output: day1-panel-discussion.mkv
  title: "1.5 Q&A Panel discussion"
  description: >-

    Panel discussion on many questions that were raised throughout the
    day.

  editlist:
  - start: 2:20:11
  - 2:21:40: Notebooks vs scripts
  - 2:29:15: How to version your data
  - 2:35:50: When you don't have someone to ask for help / CodeRefinery workshops
  - 2:39:19: Keeping track of requirements and dependencies
  - 2:43:45: Data handling in C++
  - 2:47:15: Role of containers, such as docker and singularity, in scientific computing.
  - 2:53:50: Functions vs classes
  - 3:02:35: Difference between HPC and scientific computing
  - 3:06:30: Wrapping up
  - 3:07:10: Estimating HPC resources
  - end: 3:10:50


- output: day1-connecting.mkv
  title: 1.6 Connecting to the cluster
  description: >-

    How to connect to the cluster.  This is in preparation for
    tomorrow, and not needed right now.  We give various demos, but
    you need to figure it out for yourself later.

    https://scicomp.aalto.fi/triton/tut/connecting/

  editlist:
  - start: 3:20:40
  - -: Background
  - 03:21:39: Command line vs other methods
  - 03:22:00: What we are doing today
  - 03:23:22: Connecting methods
  - 3:26:24: Accounts
  - 3:26:50: Connecting via ssh
  - 3:32:35: ssh via PuTTY
  - 3:35:00: "Other connecting methods: Open OnDemand and JupyterHub, virtual desktop"
  - 3:35:50: What you need for tomorrow
  - end: 3:43:29



- input: day2-obs.mkv
- output: day2-icebreker.mkv
  title: 2.0 Icebreaker and intro
  description: >-
    Introduction of day 1.  Most people will go straight to the other
    videos.
  editlist:
  - start: 8:40
  - end: 25:00


- output: day2-about-cluster.mkv
  title: 2.1 About clusters
  description: >-
    What is a cluster and why would we use one?  Brief reminder about
    the previous day

    https://scicomp.aalto.fi/triton/tut/intro/

  editlist:
  - start: 25:00
  - end: 29:22


- output: day2-real-example-array.mkv
  title: "2.2 Real example: Slurm array jobs"
  description: >-
    Instead of talking about the steps, we show a complete example of
    an "array job".  We go too fast for anyone to follow along, but it
    shows what you will be able to do at the end of the course.

    This particular examples uses array jobs to run split one job into
    many, which is a common form of parallelism.  Array jobs:
    https://scicomp.aalto.fi/triton/tut/array/ (see full talk
    tomorrow)

  editlist:
  - start: 29:22
  - end: 38:30


- output: day2-real-example-mpi.mkv
  title: "2.3 Real example: MPI job"
  description: >-
    A real example of running a job using MPI on a cluster (LAMMPS in
    particular).  We go from files online to downloading the files to
    doing initial tests to running with multiple processors.  Again,
    this is too fast to follow along but shows you what we will get to
    on day 3
  editlist:
  - start: 38:30
  - end: 57:20


- output: day2-interactive.mkv
  title: 2.4 Interactive jobs
  description: >-
    Before we get to scripted jobs (like most people use on the
    cluster), we will talk about interactive jobs.  This lets us get a
    little bit familiar with the Slurm system.  You shouldn't use this
    for running real calculations, but for testing and debugging, it is
    very useful.

    https://scicomp.aalto.fi/triton/tut/interactive/
  editlist:
  - start: 57:20
  - 58:55: The Slurm queue system
  - 1:02:00: Running the jobs
  - 1:11:50: sinteractive, interactive shell
  - end: 1:19:40
  - start: 1:29:23
  - -: Exercise introduction
  - end: 1:36:40
  - start: 1:56:19
  - -: Going over the exercises
  - end: 2:13:45

- output: day2-serial.mkv
  title: 2.5 Serial jobs
  description: >-
     Running jobs in simple Slurm batch scripts: this is the starting point
     of everything that comes next.  This is the most important lesson
     that everything built up to, and everything else will build upon.

     https://scicomp.aalto.fi/triton/tut/serial/
  editlist:
  - start: 2:22:35
  - cover: {begin: "2:22:42", end: "2:23:17", w: 200, h: 155, x: 325, y: 885}
  - -: About batch scripts
  - 2:25:00: Simple script example
  - 2:28:22: Our first batch script
  - 2:39:58: "Other topics: resource parameters, partitions, monitoring"
  - 2:42:54: Exercises introduction
  - end: 2:46:41
  - start: 3:23:23
  - -: Q&A from the exercises
  - 3:26:44: Going over the exercises
  - end: 3:39:05


- output: day2-monitoring.mkv
  title: 2.6 Monitoring jobs (summary)
  description: >-
    In order to use large amounts of resources, you need to be able to
    monitor how many resources you used, so that you can properly adjust
    the resources you request later.  We go over the main parts: output
    during the job, time, memory efficiency, CPU efficiency, GPU
    efficiency, and so on.

    We have already seen most of the content there, but we summarize
    everything now in one place.

    https://scicomp.aalto.fi/triton/tut/monitoring/
  editlist:
  - start: 3:40:00
  - end: 3:47:03


- output: day2-other-topics-intro.mkv
  title: 2.7 Other topics (intro)
  description: >-
    There are several things we don't go into detail about: the
    "module" command, data storage, and remote access to data.  This
    is the intro to these sections, and the actual videos come next.
  editlist:
    - start: 3:47:29
    - end: 3:48:40


- output: day2-modules.mkv
  title: 2.8 Software modules
  description: >-
    "module" is the command you use to make more software available.
     Here, we go over the idea behind it, but mainly we leave it to
     you to read the tutorial page.

     https://scicomp.aalto.fi/triton/tut/modules/
  editlist:
  - start: 3:48:40
  - end: 3:55:00


- output: day2-data-storage.mkv
  title: 2.9 Data storage
  description: >-
    We go over data storage on the cluster: why it is important, main
    considerations, where to store it, and so on.  We only give a bit of
    discussion, and leave you to read for the details.

    https://scicomp.aalto.fi/triton/tut/storage/
  editlist:
  - start: 3:55:09
  - 4:01:00: Data storage locations
  - end: 4:07:28


- output: day2-remote-data.mkv
  title: 2.10 Remote data access
  description: >-
    You have data on the cluster, but you need to be able to access it
    from outside, or copy new data to the cluster.  This can be
    surprisingly frustrating, so we discuss transferring data vs
    mounting a remote filesystem for transparent access.

    https://scicomp.aalto.fi/triton/tut/remotedata/
  editlist:
  - start: 4:07:28
  - end: 4:17:03


- output: day2-outro.mkv
  title: 2.11 Daily wrap-up
  description: >-
    Wrap-up of the day
  editlist:
  - start: 4:17:03
  - end: 4:19:26



- input: day3-obs.mkv
- output: day3-icebreaker.mkv
  title: 3.0 Icebreaker and intro
  description: >-
    Introduction of day 3.  Most people will go straight to the other
    videos.
  editlist:
  - start: 10:10
  - end: 23:13


    - output: day3-intro-array.mkv
  title: 3.1 Array jobs
  description: >-
    When there is no dependency or communication among the individual
    program runs, these individual runs can be run in parallel on
    separate Slurm jobs called array jobs.

    https://scicomp.aalto.fi/triton/tut/array/

  editlist:
  - start: 23:13
  - -: Review of serial jobs
  - 24:47: Array jobs
  - 30:24: Your first array job
  - 37:27: "Exercise: run an array job yourself"
  - end: 39:57
  - start: 47:42
  - -: "Q&A from exercise"
  - 49:48: Ways of using array jobs
  - 51:25: Reading input files
  - 52:44: Hardcoding options in the scripts
  - 54:28: Parameters from a file
  - 56:58: Advanced, chunking, etc.
  - 58:00: "Q&A"
  - 1:01:07: Exercise introduction
  - end: 1:03:45
  - start: 1:26:50
  - -: Going over the exercises
  - 1:35:00: "Q&A"
  - end: 1:37:15

- output: day3-parallel.mkv
  title: 3.2 Parallel computing
  description: >-
    Parallel computing is what HPC is really all about: processing
    things on more than one processor at once. By now, you should have
    read all of the previous tutorials.  Here, we learn about the
    different parallel paradigms (shared memory, message passing,
    OpenMP, MPI, array jobs, etc.) and see how they are used and
    configured in Slurm.

    https://scicomp.aalto.fi/triton/tut/parallel/
  editlist:
  - start: 1:37:20
  - -: Parallel programming models
  - 1:47:20: User perspective, necessary support in programs
  - 1:51:48: Embarrassingly parallel via array jobs
  - 1:52:17: Running multithreaded/multiprocess applications
  - 1:59:09: Message passing and MPI
  - 2:08:10: Discussion of exercises
  - end: 2:10:55

- output: day3-CSC-l2l.mkv
  title: 3.3 Laptops to Lumi, Jussi Enkovaara, CSC
  description: >-
    What if you need more than what a university can provide?  In
    Finland, CSC (https://csc.fi, https://docs.csc.fi) have even more
    resources, and this is a tour of them.

    https://github.com/AaltoSciComp/scicomp-docs/raw/master/training/scip/CSC-services_022022.pdf
  editlist:
  - start: 2:20:57
  - -: About this talk, about CSC
  - 2:22:32: Introduction
  - 2:25:30: About CSC
  - 2:37:13: CSC computing services
  - 2:42:53: CSC cloud computing services
  - 2:44:45: Lumi
  - 2:47:39: CSC data management and storage services
  - 2:50:02: "Other services: training, visualization, expert services, ..."
  - 2:52:35: Getting access to the services
  - 2:53:50: Q&A
  - end: 3:03:35


- output: day3-gpus.mkv
  title: 3.4 GPU computing
  description: >-
    GPUs, short for graphical processing unit, are massively-parallel
    processors that are optimized to perform parallel
    operations. Computations that might take days to run on CPUs, take
    substantially less time on GPUs.  We discuss how to use them with Slurm

    https://scicomp.aalto.fi/triton/tut/gpu/
  editlist:
  - start: 3:19:44
  - -: What's a GPU and why?
  - 3:40:24: GPU jobs on Slurm
  - 3:42:22: Machine learning frameworks
  - 3:43:40: Tensorflow example
  - 3:48:32: Selecting a certain architecture
  - 3:49:08: Warning about srun in GPU jobs
  - 3:51:00: GPU monitoring (Aalto specific)

  - 3:56:35: "Q&A: available GPUs (Aalto) architectures"
  - 3:58:14: Exercises (as demos)
  - 4:02:39: Q&A
  - end: 4:04:50

- output: day3-outro.mkv
  title: 3.5 Day 3 and workshop wrap-up
  description: >-
    Wrap up of the workshop, including some hints about what to do
    next.
  editlist:
  - start: 4:04:50
  - -: Priorities and fairshare scheduling
  - 4:08:00: About course, feedback, we are here for you
  - 4:10:00: Q&A
  - end: 4:15:43
